# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_SQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_SQL_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_SQL_URL }}
          
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Set up environment
      run: |
        echo DATABASE_URL=postgres://${{ secrets.POSTGRES_SQL_USERNAME }}:${{ secrets.POSTGRES_SQL_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_SQL_URL }} >> .env
    - name: Install dependencies
      run: npm install
    - name: Set up .env
      run: |
        echo ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }} >> .env
        echo ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} >> .env
    - name: Start server
      run: |
        cd server
        nohup node server.js &
      env:
        NODE_ENV: test
    - name: Wait for services
      run: sleep 10 # Optional step to ensure services are up
      
    - name: Run Tests
      run: npm test
